---
apiVersion: v1
kind: Service
metadata:
  name: admin-svc
  labels:
    app: admin-svc
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: admin-svc
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin-svc  
  strategy:
    type: RollingUpdate
    rollingUpdate:
       maxUnavailable: 25%
       maxSurge: 1
  template:
    metadata:
      labels:
        app: admin-svc
    spec:
      initContainers:
      - name: wait-for-cassandra
        image: cassandra
        command: [ '/bin/bash','-c', 'until echo exit | cqlsh cassandra; do echo waiting for cassandra; sleep 1; done;' ]
      - name: wait-for-postgres
        image: postgres
        command: [ '/bin/bash','-c', 'until pg_isready -h postgres; do echo waiting for postgres; sleep 1; done;' ]
      containers:
      - name: admin
        image: ntw/rest
        args: ["AdminSvc"]
        imagePullPolicy: Never
        ports:
          - containerPort: 8080
#        resources:
#          requests:
#            cpu: "50m"
#            memory: "256Mi"
#          limits:
#            cpu: "200m"
#            memory: "768Mi"
        volumeMounts:
          - name: log-data
            mountPath: /var/log/oms
        envFrom:
          - configMapRef:
              name: service-config
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: secret-config
                key: postgres.user
        env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: secret-config
                key: postgres.password
          - name: JAVA_OPTIONS
            value: "-Xms256M -Xmx768M -XX:NewRatio=1 -XX:+UseConcMarkSweepGC -XX:SoftRefLRUPolicyMSPerMB=1"
          - name: HOST_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        livenessProbe:
          httpGet:
            path: /status
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /status
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 3
#      - name: flume
#        image: asia.gcr.io/PROJECT_ID/flume:REVISION_ID
#        volumeMounts:
#          - name: log-data
#            mountPath: /var/log/oms
      volumes:
        - name: log-data
          emptyDir: {}
